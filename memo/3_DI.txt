의존성을 주입하는 방법
	기본적인 방법 : @Autowired 어노테이션을 이용하여 의존성을 주입할 수 있다.  	

	필드 주입
		가장 간단하게 주입하는 방법으로 필드에 @Autowired 를 붙여 의존성을 주입합니다.
		단, "final" 키워드를 붙일 수 없기에 변경될 여지가 있어서 잘 사용하지 않습니다.
	
	메서드(setter) 주입 
		setter(메서드)에 @Autowired를 붙여 클래스 타입의 빈을 찾아와 의존성을 주입합니다.
		생성 시점 이후에 메서드를 호출하여 의존성을 변경할 수 있으나
		필드가 외부에서 변경될 수 있다는 점과 의존성이 필요한 시점에 주입되지 않을 수 있다는 위험이 존재한다.

	생성자 주입 >> 스프링에서 가장 권장하는 주입 방식
		클래스 생성자에 @Autowired 를 붙여 클래스 타입의 필드들을 찾아 등록한다.
		선언하는 클래스에 final을 붙일 수 있다.
	
		장점
			- final로 선언할 수 있어서 변경할 수 없게 만든다.
			- 의존성 주입 시점에서 문제가 발생할 확률이 낮다.
			- 생성자에만 의존성 주입이 일어나기 때문에 가독성이 높고, 관리하기가 용이합니다.

Lombok
	자바에서 반복적으로 작성해야 하는 코드를 줄여주는 라이브러리
	어노테이션 기반으로 동작하며, Object 클래스에서 재정의하는 것들이나 생성자 등을 자동으로 생성해준다.
	깔끔하고 유지보수하기 쉬운 코드를 작성할 수 있게 된다.

	@Getter
	@Setter				
	@ToString					: toString 재정의
	@EqualsAndHashCode 		: equals 및 hashcode 재정의
	@NoArgsConstructor			: 기본 생성자
	@AllArgsConstructor			: 모든 필드를 매개변수로 가지는 초기화 생성자
	@RequiredArgsConstructor		: 특정 필드를 매개변수로 가지는 생성자  ( 제외된 필드와 구분해주기 위해 "final, @NonNull 키워드를 붙여준다. )
	@Data 					: 생성자 중에서 RequiredArgsConstructor만 만들어준다. ( 테스트용으로 사용 )
							( 단, 기본 생성자가 없는 경우에만 적용된다. )

테스트용 클래스 만들기
	클래스명 뒤에 마우스 커서가 오게 하고, "Alt + Enter"키






















